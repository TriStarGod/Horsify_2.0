version: '2.0.{build}'
image: Visual Studio 2017
branches:
  only:
  - master
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
install:
  # Install repo specific stuff here
  
build:
  # enable MSBuild parallel builds
  parallel: true          
  # path to Visual Studio solution or project      
  project: Horsify 2.0.sln
before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore ./Data/Horsesoft.Music.Data.Model/Horsesoft.Music.Data.Model.csproj --verbosity m
  - cmd: dotnet restore ./Data/Horsesoft.Music.Data.Sqlite/Horsesoft.Music.Data.Sqlite.csproj --verbosity m
  - cmd: dotnet restore ./Repo/Horsesoft.Music.Horsify.Repositories/Horsesoft.Music.Horsify.Repositories.csproj --verbosity m
  - cmd: dotnet restore ./Tests/Horsesoft.Music.Horsify.RepositoryTests/Horsesoft.Music.Horsify.RepositoryTests.csproj --verbosity m  
  - cmd: dotnet restore ./Tests/Horsesoft.Music.EngineTests/Horsesoft.Music.EngineTests.csproj --verbosity m  

build_script:
  # output will be in ./src/bin/debug/netcoreapp1.1/publish
  #- cmd: dotnet publish ./src/src.csproj
after_build:
  # For once the build has completed
artifacts:
 #- path: '\src\bin\Debug\netcoreapp1.1\publish'
   #name: WebSite
   #type: WebDeployPackage
clone_depth: 1
test_script:
  # restore packages for our unit tests
  #- cmd: dotnet restore ./tests/tests.csproj --verbosity m
  # run the unit tests (requires changing into the test directory)
  #- cmd: cd tests
  #- cmd: dotnet xunit
on_finish :
  # any cleanup in here
deploy: off