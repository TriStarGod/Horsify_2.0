//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Horsesoft.Music.Horsify.SongServiceClient.HorsifyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HorsifyService.IHorsifySongService")]
    public interface IHorsifySongService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFileService/GetById", ReplyAction="http://tempuri.org/IHorsifyFileService/GetByIdResponse")]
        Horsesoft.Music.Data.Model.File GetById(long value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFileService/GetById", ReplyAction="http://tempuri.org/IHorsifyFileService/GetByIdResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.File> GetByIdAsync(long value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/SearchLike", ReplyAction="http://tempuri.org/IHorsifySearchService/SearchLikeResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable[] SearchLike(Horsesoft.Music.Data.Model.Horsify.SearchType searchTypes, string wildCardSearch, short randomAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/SearchLike", ReplyAction="http://tempuri.org/IHorsifySearchService/SearchLikeResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> SearchLikeAsync(Horsesoft.Music.Data.Model.Horsify.SearchType searchTypes, string wildCardSearch, short randomAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/SearchLikeFilters", ReplyAction="http://tempuri.org/IHorsifySearchService/SearchLikeFiltersResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable[] SearchLikeFilters(Horsesoft.Music.Data.Model.Horsify.SearchFilter searchFilter, short randomAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/SearchLikeFilters", ReplyAction="http://tempuri.org/IHorsifySearchService/SearchLikeFiltersResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> SearchLikeFiltersAsync(Horsesoft.Music.Data.Model.Horsify.SearchFilter searchFilter, short randomAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetData", ReplyAction="http://tempuri.org/IHorsifySongService/GetDataResponse")]
        Horsesoft.Music.Data.Model.File GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetData", ReplyAction="http://tempuri.org/IHorsifySongService/GetDataResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.File> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetSongById", ReplyAction="http://tempuri.org/IHorsifySongService/GetSongByIdResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable GetSongById(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetSongById", ReplyAction="http://tempuri.org/IHorsifySongService/GetSongByIdResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable> GetSongByIdAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetTotals", ReplyAction="http://tempuri.org/IHorsifySongService/GetTotalsResponse")]
        int GetTotals(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetTotals", ReplyAction="http://tempuri.org/IHorsifySongService/GetTotalsResponse")]
        System.Threading.Tasks.Task<int> GetTotalsAsync(string type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHorsifySongServiceChannel : Horsesoft.Music.Horsify.SongServiceClient.HorsifyService.IHorsifySongService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HorsifySongServiceClient : System.ServiceModel.ClientBase<Horsesoft.Music.Horsify.SongServiceClient.HorsifyService.IHorsifySongService>, Horsesoft.Music.Horsify.SongServiceClient.HorsifyService.IHorsifySongService {
        
        public HorsifySongServiceClient() {
        }
        
        public HorsifySongServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HorsifySongServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HorsifySongServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HorsifySongServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Horsesoft.Music.Data.Model.File GetById(long value) {
            return base.Channel.GetById(value);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.File> GetByIdAsync(long value) {
            return base.Channel.GetByIdAsync(value);
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable[] SearchLike(Horsesoft.Music.Data.Model.Horsify.SearchType searchTypes, string wildCardSearch, short randomAmount) {
            return base.Channel.SearchLike(searchTypes, wildCardSearch, randomAmount);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> SearchLikeAsync(Horsesoft.Music.Data.Model.Horsify.SearchType searchTypes, string wildCardSearch, short randomAmount) {
            return base.Channel.SearchLikeAsync(searchTypes, wildCardSearch, randomAmount);
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable[] SearchLikeFilters(Horsesoft.Music.Data.Model.Horsify.SearchFilter searchFilter, short randomAmount) {
            return base.Channel.SearchLikeFilters(searchFilter, randomAmount);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> SearchLikeFiltersAsync(Horsesoft.Music.Data.Model.Horsify.SearchFilter searchFilter, short randomAmount) {
            return base.Channel.SearchLikeFiltersAsync(searchFilter, randomAmount);
        }
        
        public Horsesoft.Music.Data.Model.File GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.File> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable GetSongById(int value) {
            return base.Channel.GetSongById(value);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable> GetSongByIdAsync(int value) {
            return base.Channel.GetSongByIdAsync(value);
        }
        
        public int GetTotals(string type) {
            return base.Channel.GetTotals(type);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalsAsync(string type) {
            return base.Channel.GetTotalsAsync(type);
        }
    }
}
