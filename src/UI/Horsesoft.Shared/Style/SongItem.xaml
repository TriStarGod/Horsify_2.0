<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:customcontrols="clr-namespace:Horsesoft.Horsify.Resource.Windows.CustomControls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ConverterResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <DataTemplate x:Key="MusicKeyQueueTemplate">
        <Grid Width="22" Height="22" Margin="2">
            <!--TODO-->
            <Ellipse Fill="{Binding QueuedSong.MusicKey, Converter={StaticResource MusicKeyToColorConverter}, UpdateSourceTrigger=PropertyChanged}"
                                             Stroke="Black"
                                             />
            <TextBlock Text="{Binding QueuedSong.MusicKey, Mode=OneWay}" TextAlignment="Center"
                                               FontSize="10" VerticalAlignment="Center" FontStyle="Italic" FontWeight="DemiBold"
                                               FontFamily="Arial"
                                               />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MusicKeyTemplate">
        <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Width="22" Height="22"
              Visibility="{Binding MusicKey, Converter={StaticResource string2vis}}">
            <Ellipse Fill="{Binding MusicKey, Converter={StaticResource MusicKeyToColorConverter}, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="{Binding MusicKey, Mode=OneWay}" TextAlignment="Center"
                                               FontSize="10" VerticalAlignment="Center" FontStyle="Italic" FontWeight="DemiBold"
                                               FontFamily="Arial"
                                               />
        </Grid>
    </DataTemplate>

    <!--PLAY / QUEUE / PLAYLIST PANEL-->
    <DataTemplate x:Key="SongCtrlPanel">
        <StackPanel Orientation="Horizontal">
            <Button Content="{DynamicResource IconQueueTwo}" 
                            Height="32"
                        Command="{Binding ElementName=LayoutRoot, Path=DataContext.QueueSongCommand}" 
                        CommandParameter="{Binding}"
                            />
            <!--CommandParameter="{Binding}"-->
            <Button Height="32"
                            Content="{DynamicResource Icon_play_Two}" 
                        Command="{Binding ElementName=LayoutRoot, Path=DataContext.PlaySongCommand}" 
                        CommandParameter="{Binding}"
                        />
        </StackPanel>
    </DataTemplate>

    <!--SONG ITEM TEMPLATE - FOR SEARCHED SONGS MAIN - Can change with selector-->
    <DataTemplate x:Key="SongItemTemplate">

        <DataTemplate.Resources>
            <Storyboard x:Key="OnLoaded1">
                <!--GRID FADE ANIM-->
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                       Storyboard.TargetName="songItemGrid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </DataTemplate.Resources>

        <!--MAX HEIGHT-->
        <!--130 == 30 items - SLOW?-->
        <!--160 == 25 items-->
        <!--200 == 20 items-->
        <!--270 == 15 items-->
        <!--No height set == 10 items-->
        <Grid x:Name="songItemGrid" MaxHeight="200"
              Background="Transparent"
              Style="{DynamicResource FadingLabel}">

            <!--ALBUM ART & RATING-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.Effect>
                    <DropShadowEffect/>
                </Grid.Effect>

                <!--ARTWORK BACKGROUND-->
                <Rectangle Grid.Row="0" Grid.RowSpan="2" 
                               RadiusY="25"                                
                               Fill="{DynamicResource Color_Primary3}"
                               RadiusX="0.5" 
                               x:Name="rect4500"
                               StrokeThickness="2" 
                               Stroke="Black" Opacity="1"/>

                <Border x:Name="AlbumFrame" Grid.Row="0"
                        Grid.RowSpan="2" 
                        Background="Transparent" >
                    <Grid>
                        <!--ALBUM ART-->
                        <Image Grid.Row="1" Stretch="Fill"
                                        MaxHeight="240" MaxWidth="260"
                                        Height="242" Width="260">
                            <Image.CacheMode>
                                <BitmapCache RenderAtScale="0.9"/>
                            </Image.CacheMode>

                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="{Binding ImageLocation, Converter={StaticResource stringToBitmapConverter}}"/>

                                    <Style.Triggers>
                                        <DataTrigger  Binding="{Binding ImageLocation}" Value="{x:Null}">
                                            <Setter Property="Source" Value="{DynamicResource Bitmap_AlbumArtNoImage}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>

                        <!--MUSIC KEY ICON-->
                        <Grid HorizontalAlignment="Right" VerticalAlignment="Top"                               
                              Width="22" Height="22">
                            <Ellipse Fill="{Binding MusicKey,  Mode=OneWay, Converter={StaticResource MusicKeyToColorConverter}}"
                                             Stroke="Black"
                                             />

                            <TextBlock Text="{Binding MusicKey, Mode=OneWay}" TextAlignment="Center"
                                               FontSize="8" VerticalAlignment="Center" FontStyle="Italic" FontWeight="DemiBold"
                                               FontFamily="Arial"
                                               />
                        </Grid>
                    </Grid>
                </Border>

                <!--DETAILS LABEL-->
                <Border VerticalAlignment="Bottom" Grid.Row="1"
                          CornerRadius="2,2,5,5"               
                          Background="{DynamicResource Brush_Metal}"                          
                          TextElement.Foreground="Black"                           
                          MaxWidth="280"
                          Width="280"
                          >
                    <StackPanel Background="Transparent"
                          TextElement.FontSize="18.5"
                          TextElement.FontWeight="Medium"
                          TextElement.FontFamily="Impact"
                                >
                        <!--ARTIST-YEAR-->
                        <Grid>
                            <TextBlock Text="{Binding Artist, Mode=OneWay}"/>
                            <TextBlock Text="{Binding Year, Mode=OneWay}" 
                                   HorizontalAlignment="Right"/>
                        </Grid>
                        <!--TITLE-->
                        <Grid>
                            <TextBlock Text="{Binding Title, Mode=OneWay}" 
                                   HorizontalAlignment="Left"/>
                        </Grid>
                        <!--GENRE-->
                        <Grid>
                            <TextBlock Text="{Binding Genre, Mode=OneWay}" 
                                   HorizontalAlignment="Left"/>
                        </Grid>
                        <!--INFO-->
                        <DockPanel>
                            <TextBlock Text="{Binding Time, Mode=OneWay}" 
                                   HorizontalAlignment="Right" DockPanel.Dock="Right"/>

                            <TextBlock Text="{Binding Bpm, Mode=OneWay, StringFormat={}{0} BPM}"/>

                        </DockPanel>
                    </StackPanel>
                </Border>


                <customcontrols:RatingControl RatingValue="{Binding Rating, Mode=OneWay}"
                                                      Style="{DynamicResource RatingViewStyle}"
                                                      StarWidth="22"
                                                      VerticalAlignment="Top"
                                                      HorizontalAlignment="Left"
                                                      Margin="0,0"
                                                      />

            </Grid>

        </Grid>

    </DataTemplate>

    <!--JUKEBOX YELLOW STRIP-->
    <DataTemplate x:Key="JukeboxLabelTemplate">

        <Grid>

            <Border Background="{DynamicResource BackgroundGradient4}" 
                BorderThickness="2" Margin="3"
                BorderBrush="{DynamicResource Color_Primary5}"
                Width="460" CornerRadius="0,10,15,15"
                Height="190"
                    MaxHeight="190"
                >
                <Grid TextElement.FontSize="18"                  
                  >

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Image 
                    Width="160" Height="140"
                    Grid.RowSpan="4">
                        <Image.CacheMode>
                            <BitmapCache RenderAtScale="0.8" SnapsToDevicePixels="True"/>
                        </Image.CacheMode>

                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding ImageLocation, Converter={StaticResource stringToBitmapConverter}}"/>

                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding ImageLocation}" Value="{x:Null}">
                                        <Setter Property="Source" Value="{DynamicResource Bitmap_AlbumArtNoImage}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>

                    </Image>

                    <Border  BorderBrush="Black" BorderThickness="2" Grid.Column="1" CornerRadius="0,5,0,0">
                        <Grid>
                            <Rectangle Fill="#FFB1680A" Width="270" Height="20"/>
                            <TextBlock Text="{Binding Artist}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <TextBlock Grid.Row="1" Text="{Binding Title}" TextWrapping="Wrap" MaxWidth="200" HorizontalAlignment="Center" Grid.Column="1"/>
                    <TextBlock Grid.Row="2" Text="{Binding Album}" TextWrapping="Wrap" MaxWidth="250" HorizontalAlignment="Left" Grid.Column="1"/>
                    <TextBlock Grid.Row="3" Text="{Binding Year}" TextWrapping="Wrap" MaxWidth="200" HorizontalAlignment="Left" Grid.Column="1"/>
                    <TextBlock Grid.Row="4" Text="{Binding Label}" TextWrapping="Wrap" MaxWidth="150" MaxHeight="20"  HorizontalAlignment="Left" Grid.Column="1"/>

                    <!--RATING-->
                    <customcontrols:RatingControl RatingValue="{Binding Rating, Mode=OneWay}"
                                                      Style="{DynamicResource RatingViewStyle}"
                                                      StarWidth="20"
                                              Grid.RowSpan="5" Grid.ColumnSpan="2"
                                                  Margin="35,0"
                                              VerticalAlignment="Bottom" HorizontalAlignment="Left"
                                                      />
                </Grid>

                <Border.BitmapEffect>
                    <DropShadowBitmapEffect/>
                </Border.BitmapEffect>
            </Border>

            <ContentPresenter ContentTemplate="{StaticResource SongCtrlPanel}" 
                              Grid.RowSpan="5" Grid.Column="0" Margin="10"
                     HorizontalAlignment="Right"
                     VerticalAlignment="Bottom" 
                              />
        </Grid>

    </DataTemplate>

    <!--SongItem Minimal Artist Title-->
    <DataTemplate x:Key="SongItemMinimalArtistTitle">
        <DataTemplate.Resources>
            <Storyboard x:Key="OnLoaded1">
                <!--GRID FADE ANIM-->
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                       Storyboard.TargetName="songItemGrid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </DataTemplate.Resources>

        <!--MAX HEIGHT-->
        <!--130 == 30 items - SLOW?-->
        <!--160 == 25 items-->
        <!--200 == 20 items-->
        <!--270 == 15 items-->
        <!--No height set == 10 items-->
        <Grid x:Name="songItemGrid" MaxHeight="200"
              Style="{DynamicResource FadingLabel}">

            <!--ALBUM ART & RATING-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.Effect>
                    <DropShadowEffect/>
                </Grid.Effect>

                <!--ARTWORK BACKGROUND-->
                <Rectangle Grid.Row="0" Grid.RowSpan="2" 
                               RadiusY="25"                                
                               Fill="{DynamicResource Color_Primary3}"
                               RadiusX="0.5" 
                               x:Name="rect4500"
                               StrokeThickness="2" 
                               Stroke="Black" Opacity="1"/>

                <Border x:Name="AlbumFrame" Grid.Row="0" Background="Transparent">

                    <Grid>
                        <!--ALBUM ART-->
                        <Image Grid.Row="1" Stretch="Fill" 
                                   MinHeight="240" MinWidth="260"
                                   MaxHeight="240" MaxWidth="260"                                    >
                            <Image.CacheMode>
                                <BitmapCache RenderAtScale="0.9"/>
                            </Image.CacheMode>

                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="{Binding ImageLocation, Converter={StaticResource stringToBitmapConverter}}"/>

                                    <Style.Triggers>
                                        <DataTrigger  Binding="{Binding ImageLocation}" Value="{x:Null}">
                                            <Setter Property="Source" Value="{DynamicResource Bitmap_AlbumArtNoImage}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>


                        <Border VerticalAlignment="Top" Background="{DynamicResource BackgroundGradient5}"
                                HorizontalAlignment="Left" CornerRadius="2,10,10,2" Margin="2"
                                Opacity="0.88"
                                >
                            <customcontrols:RatingControl RatingValue="{Binding Rating, Mode=OneWay}"
                                                      Style="{DynamicResource RatingViewStyle}"
                                                      StarWidth="20"
                                                      Margin="10,0"                                                      
                                                      />
                        </Border>

                        <!--MUSIC KEY ICON-->
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top"
                                  Visibility="Collapsed"
                              Width="22" Height="22">
                            <Ellipse Fill="{Binding MusicKey,  Mode=OneWay, Converter={StaticResource MusicKeyToColorConverter}}"
                                             Stroke="Black"
                                             />

                            <TextBlock Text="{Binding MusicKey, Mode=OneWay}" TextAlignment="Center"
                                               FontSize="8" VerticalAlignment="Center" FontStyle="Italic" FontWeight="DemiBold"
                                               FontFamily="Arial"
                                               />
                        </Grid>

                        <!--DETAILS LABEL - Width on the parent border is needed to keep items same width-->
                        <Border VerticalAlignment="Bottom" Grid.Row="1"            
                                CornerRadius="2,2,5,5"
                                TextElement.Foreground="White"  
                                Width="280"
                                >
                            <Grid>

                                <Border
                                CornerRadius="2,1,5,5"
                                    BorderThickness="2"
                                    BorderBrush="Black" Opacity="0.8"
                                Width="280"
                                        Background="{DynamicResource BackgroundGradient}"   
                                />

                                <StackPanel VerticalAlignment="Bottom"                                            
                                    Margin="5,0"
                                    TextElement.FontSize="18.5"
                                    TextElement.FontWeight="Medium"
                                    TextElement.FontFamily="Impact"
                                    >
                                    <Grid>
                                        <!--ARTIST-YEAR-->
                                        <TextBlock Text="{Binding Artist, Mode=OneWay}"/>

                                        <!--YEAR-->
                                        <TextBlock Text="{Binding Year, Mode=OneWay}" HorizontalAlignment="Right"/>
                                    </Grid>

                                    <!--TITLE-->
                                    <TextBlock Text="{Binding Title, Mode=OneWay}" HorizontalAlignment="Left"/>

                                </StackPanel>
                            </Grid>
                        </Border>

                    </Grid>
                </Border>

            </Grid>

            <ContentPresenter ContentTemplate="{StaticResource SongCtrlPanel}"                               
                     HorizontalAlignment="Right"
                     VerticalAlignment="Top" 
                              />
        </Grid>
    </DataTemplate>

    <!--PLAYLIST TEMPLATE-->
    <DataTemplate x:Key="JukeboxLabelThinTemplate">

        <Border                  
                BorderThickness="2" Margin="0"                
                BorderBrush="#FF975405"
                >

            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="#FFB99106"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding PlayedState}" Value="1">
                            <Setter Property="Background" Value="Gray"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid TextElement.FontSize="22" MaxHeight="185">

                <!--#region GRID DEFS-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!--#endregion-->

                <!--IMAGE AND RATING-->
                <Grid Grid.Column="0" Grid.RowSpan="3">

                    <!--IMAGE-->
                    <Image Width="150" Height="100"    
                       MaxWidth="100" HorizontalAlignment="Left">
                        <Image.CacheMode>
                            <BitmapCache RenderAtScale="0.8" SnapsToDevicePixels="True"/>
                        </Image.CacheMode>

                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding Song.ImageLocation, Converter={StaticResource stringToBitmapConverter}}"/>

                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding Song.ImageLocation}" Value="{x:Null}">
                                        <Setter Property="Source" Value="{DynamicResource Bitmap_AlbumArtNoImage}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <!--ITEM NUMBERS-->
                    <Grid >
                        <Rectangle Fill="{DynamicResource Color_Primary2}" 
                                     Width="22" Height="22" Stroke="Black" 
                                     VerticalAlignment="Top" HorizontalAlignment="Left"/>

                        <TextBlock Margin="5,0" TextAlignment="Left" FontSize="16"
                                       Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(ItemsControl.AlternationIndex)}"                                       
                                       />
                    </Grid>

                    <!--RATING-->
                    <customcontrols:RatingControl RatingValue="{Binding Song.Rating, Mode=OneWay}"
                                                      Style="{DynamicResource RatingViewStyle}"
                                                      StarWidth="20"
                                                      VerticalAlignment="Bottom"
                                                      />

                </Grid>

                <!--TITLE-->
                <Grid Grid.Column="1" Grid.Row="0">
                    <Rectangle Fill="#FFB1680A" Height="10"/>
                    <TextBlock Text="{Binding Song.Title}" 
                               HorizontalAlignment="Center"
                               />
                </Grid>

                <!--ARTIST-->
                <Border Grid.Column="1" Grid.Row="1" 
                        BorderBrush="#FF975405" BorderThickness="2">
                    <Grid>
                        <Rectangle Fill="#FFB1680A" Height="10"/>
                        <TextBlock Text="{Binding Song.Artist}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </Border>

                <!--Last played-->
                <Border Grid.Column="1" Grid.Row="2" BorderBrush="#FF975405" BorderThickness="2">
                    <Grid>
                        <Rectangle Fill="#FFB1680A" Height="10"/>

                        <TextBlock>
                            <TextBlock Text="Last played" HorizontalAlignment="Center" VerticalAlignment="Center"/>    
                            <Run Text=" -- "/>
                            <TextBlock Text="{Binding Song.LastPlayed, Converter={StaticResource UnixstampToDateConverter}}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>                                
                        </TextBlock>

                    </Grid>
                </Border>

                <!--PLAYLIST QUEUE-->
                <!--TODO: MOVE PLAYLIST COMMANDS TO USE THE OTHER BASE VIEW MODEL-->
                <StackPanel HorizontalAlignment="Center" Grid.Row="4" Orientation="Horizontal" Grid.ColumnSpan="3">
                    <Button Content="{DynamicResource IconQueueTwo}" 
                            Height="36"
                        Command="{Binding ElementName=PlaylistItemsRoot, Path=DataContext.AddToQueueCommand}" 
                        CommandParameter="{Binding}"                            
                            />
                    <Button Height="36"
                            Content="{DynamicResource Icon_play_Two}" 
                        Command="{Binding ElementName=PlaylistItemsRoot, Path=DataContext.PlayItemCommand, FallbackValue={x:Null}}" 
                        CommandParameter="{Binding}"/>

                    <!--TODO: Info icon-->
                    <Button Height="36"
                            Content="i" 
                        Command="{Binding ElementName=PlaylistItemsRoot, Path=DataContext.SelectSongCommand, FallbackValue={x:Null}}" 
                        CommandParameter="{Binding}"/>

                    <Button Height="36"
                            Content="{DynamicResource DeleteIcon}" 
                        Command="{Binding ElementName=PlaylistItemsRoot, Path=DataContext.RemoveItemCommand, FallbackValue={x:Null}}" 
                        CommandParameter="{Binding}"/>
                </StackPanel>

                <!--ADD TO PLAYLIST BUTTONS-->
                <Grid Grid.Row="5" Grid.ColumnSpan="3">
                    <Grid.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=PlaylistItemsRoot, Path=DataContext.TabHeader, UpdateSourceTrigger=PropertyChanged}"
                                                Value="Preparation Playlist">
                                    <Setter Property="StackPanel.Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="StackPanel.Visibility" Value="Hidden"/>
                        </Style>
                    </Grid.Style>

                    <!--<Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>-->

                    <ListView Grid.Row="1" x:Name="PlaylistTabComboBox"                              
                                  ItemsSource="{Binding ElementName=LayoutRoot, Path=DataContext.OpenPlayListViewModels}" >

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Button Content="{Binding TabHeader}" 
                                            Command="{Binding ElementName=PlaylistTabComboBox, Path=DataContext.MoveSongCommand}" 
                                            CommandParameter="{Binding}">
                                        <Button.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TabHeader, UpdateSourceTrigger=PropertyChanged}" Value="Preparation Playlist">
                                                        <Setter Property="StackPanel.Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="StackPanel.Visibility" Value="Visible"/>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>

                    </ListView>

                </Grid>
            </Grid>
        </Border>

    </DataTemplate>

    <!--QUEUE ITEM TEMPLATE - USES A QueueItemViewModel-->
    <DataTemplate x:Key="QueueItemTemplate">
        <DataTemplate.Resources>

            <!--QUEUE ITEM STORYBOARD-->
            <Storyboard x:Key="OnQueueItemLoaded">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="button">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.55"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="button">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.55"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </DataTemplate.Resources>

        <Grid Height="140">

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!--PLAY SONG COMMAND-->
            <Button x:Name="button" Height="125" Width="125" 
                    Command="{Binding DataContext.PlaySongCommand, ElementName=LayoutRoot, UpdateSourceTrigger=PropertyChanged}" 
                    CommandParameter="{Binding}"
                    RenderTransformOrigin="0.5,0.5" >
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Grid>

                    <!--COVER ART-->
                    <!--TODO - Change image size for converter-->
                    <Image Stretch="Fill" 
                           Margin="0" 
                           MinWidth="150"
                           MinHeight="150"
                           >
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="{Binding QueuedSong.ImageLocation, Converter={StaticResource stringToBitmapConverter}}"/>

                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding QueuedSong.ImageLocation}" Value="{x:Null}">
                                        <Setter Property="Source" Value="{DynamicResource Bitmap_AlbumArtNoImage}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <!--ITEM NUMBERS-->
                    <Grid >
                        <Rectangle Fill="{DynamicResource Color_Primary}" 
                                     Width="22" Height="22" Stroke="Black" 
                                     VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        <TextBlock Margin="5,0" TextAlignment="Left" 
                                       Text="{Binding (ItemsControl.AlternationIndex),
                                RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                       FontSize="16"
                                       />
                    </Grid>

                    <!--MUSIC KEY-->
                    <ContentPresenter VerticalAlignment="Top" HorizontalAlignment="Right"
                                      ContentTemplate="{StaticResource MusicKeyQueueTemplate}"/>

                </Grid>
            </Button>

            <!--QUEUED SONG INFO-->
            <Rectangle Fill="{DynamicResource BackgroundGradient5}" Opacity="0.8" Height="30" 
                           VerticalAlignment="Bottom" RadiusX="5" RadiusY="5"/>

            <StackPanel Orientation="Vertical" VerticalAlignment="Bottom"
                            Grid.Row="0" TextElement.FontSize="9" 
                            TextElement.Foreground="White">

                <!--RATING-->
                <customcontrols:RatingControl RatingValue="{Binding QueuedSong.Rating, Mode=OneWay}" Margin="3"
                                                      Style="{DynamicResource RatingViewStyle}"
                                                      StarWidth="20"
                                                      VerticalAlignment="Bottom"
                                                      HorizontalAlignment="Left"
                                                      />

                <!--ARTIST-->
                <TextBlock Text="{Binding QueuedSong.Artist, Mode=OneWay}"
                               FontSize="14"
                               MaxWidth="105" 
                                Foreground="White"
                               TextWrapping="NoWrap"/>

                <!--SONG TITLE-->
                <TextBlock Text="{Binding QueuedSong.Title,Mode=OneWay}"
                               FontSize="12"
                           Foreground="White"
                               MaxWidth="105" 
                               TextWrapping="NoWrap"/>

            </StackPanel>

            <!--REMOVE FROM QUEUE BUTTON-->
            <Button Content="{DynamicResource DeleteIcon}"
                        Width="25" Opacity="1"      
                        Margin="0,0,0,20"
                        Style="{DynamicResource Style_ButtonNoEffects}"
                        Background="PaleVioletRed"                        
                        HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Command="{Binding ElementName=LayoutRoot, 
                                    Path=DataContext.RemoveSongFromQueueCommand}"
                        CommandParameter="{Binding}"
                        />

        </Grid>

        <!--LOAD ANIMATION-->
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="button">
                <BeginStoryboard x:Name="OnQueueItemLoaded_BeginStoryboard" 
                                     Storyboard="{StaticResource OnQueueItemLoaded}"/>
            </EventTrigger>
        </DataTemplate.Triggers>

    </DataTemplate>


</ResourceDictionary>