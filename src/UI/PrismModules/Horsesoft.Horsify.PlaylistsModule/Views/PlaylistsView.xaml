<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"                          
             xmlns:local="clr-namespace:Horsesoft.Horsify.PlaylistsModule.Views"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" x:Class="Horsesoft.Horsify.PlaylistsModule.Views.PlaylistsView"
             prism:ViewModelLocator.AutoWireViewModel="True" 
             d:DesignWidth="1920" d:DesignHeight="1080"
             d:DataContext="{d:DesignData /SampleData/PlaylistsViewModelSampleData.xaml}">

    <UserControl.Resources>

        <!--d:DesignSource="{d:DesignData Source=../SampleData/DjHorsifyFilterModelSampleData.xaml}"-->
        <CollectionViewSource x:Key="OpenPlaylistViewModelViewSource"
                              Source="{Binding OpenPlayListViewModels}"              
                              d:DesignSource="{d:DesignData Source=../SampleData/DjHorsifyFilterModelSampleData.xaml}"
                                                       
                              />

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="FontSize" Value="23"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="23"/>
            <Setter Property="Margin" Value="3"/>
        </Style>

        <!--#region TEMPLATES-->

        <!--PLAYLIST ITEM TEMPLATE-->
        <DataTemplate x:Key="PlaylistTabTemplate">
            <Grid x:Name="PlaylistItemsRoot">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <CollectionViewSource x:Key="PlaylistItemsViewModelSource"
                              Source="{Binding PlayListItemViewModels}"
                              d:DesignSource="{d:DesignData Source=../SampleData/PlaylistItemViewModelSampleData.xaml}"/>


                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="192*"/>
                    <ColumnDefinition Width="1361*"/>
                </Grid.ColumnDefinitions>

                <Rectangle Height="40" Fill="Gray" Grid.ColumnSpan="2"/>

                <Button Content="Clear" 
                        Command="{Binding ClearItemsCommand}"
                        HorizontalAlignment="Left" 
                        MinWidth="75" 
                        Margin="3,4,0,4"/>

                <Button Content="DELETE" Command="{Binding DeletePlaylistCommand}" 
                        HorizontalAlignment="Right" Margin="0,4,90,4" MinWidth="75" Grid.Column="1"/>

                <Button Content="Save" Command="{Binding SavePlaylistCommand}" 
                        HorizontalAlignment="Right" MinWidth="75" Margin="0,4,3,4" Grid.Column="1"/>

                <ScrollViewer  Grid.Row="1" 
                       CanContentScroll="True"                        
                        VerticalScrollBarVisibility="Auto"
                        HorizontalScrollBarVisibility="Disabled"
                        IsDeferredScrollingEnabled="False"
                        PanningDeceleration="5" Grid.ColumnSpan="2"                                 
                       >

                    <!--SELECTED LIST playlist items-->
                    <ItemsControl
                      ItemsSource="{Binding Source={StaticResource PlaylistItemsViewModelSource}}"
                      ItemTemplate="{DynamicResource JukeboxLabelThinTemplate}"                        
                      FontSize="32"                        
                      Background="Transparent"
                      AlternationCount="{Binding Items.Count, RelativeSource={RelativeSource Self}}"
                      >

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="2" Rows="10"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                    </ItemsControl>

                </ScrollViewer>
            </Grid>
        </DataTemplate>

        <!--PLAYLIST HEADER-->
        <DataTemplate x:Key="PlaylistTabHeaderRemplate">
            <TextBlock x:Name="aadad" Background="Transparent" FontSize="24"><InlineUIContainer>
                    <TextBlock 
                        Text="{Binding TabHeader}"/>
                
                </InlineUIContainer><Run Text=" "/><Run Text="--" /><Run Text=" "/><InlineUIContainer>
                    <TextBlock Text="{Binding PlayListItemViewModels.Count}"  />
                </InlineUIContainer><Run Text=" "/><InlineUIContainer>
                
                    <Button Content="X"
                            Height="28" Width="32"
                            FontSize="16"
                        Command="{Binding DataContext.CloseTabCommand, ElementName=LayoutRoot}"
                        CommandParameter="{Binding}"
                                    >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">    
                                <Setter Property="UIElement.Visibility" Value="Visible"/>                                        
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TabHeader}" Value="Preparation Playlist">
                                        <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                    </DataTrigger>                                            
                                </Style.Triggers>
                            </Style>                                
                        </Button.Style>                                
                    </Button>
                </InlineUIContainer></TextBlock>
        </DataTemplate>

        <!--TAB ITEM STYLE-->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>

            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Content="{StaticResource PlaylistTabHeaderRemplate}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="TabControlNoReorderStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <WrapPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

    </UserControl.Resources>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding HelpNotificationRequest}">
            <prism:PopupWindowAction IsModal="False" CenterOverAssociatedObject="True"                                     
                                     >
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="WindowStyle" Value="None"/>
                        <Setter Property="AllowsTransparency" Value="True"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>


                <prism:PopupWindowAction.WindowContent>
                    <local:PlaylistHelpView/>
                </prism:PopupWindowAction.WindowContent>

            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="LayoutRoot">

        <!--#region Definitions-->
        <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>-->

        <Grid.RowDefinitions>
            
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--#endregion-->

        <!--#region TITLE -->
        <StackPanel Orientation="Horizontal" Visibility="Hidden">
            <TextBlock Text="         PLAYLISTS"   Grid.ColumnSpan="2"
                       HorizontalAlignment="Center"
                       FontSize="54"
                       Style="{StaticResource TextBlockStyle_BebasXxLarge}"
                       VerticalAlignment="Top"
                       />

            <Button Content="?" FontSize="16"
                    Height="32" Margin="15"
                        Command="{Binding HelpWindowCommand}"
                        />
        </StackPanel>
        <!--#endregion-->


        <DockPanel Grid.Row="1">

            <Border Background="{DynamicResource BackgroundGradient}"
                    CornerRadius="50,0,5,50"
                    >
                <Expander IsTabStop="False"
                          DockPanel.Dock="Left"
                      ExpandDirection="Right"   
                      BorderBrush="Transparent"
                      IsExpanded="True">

                    <Expander.Header >
                        <TextBlock Text="SAVED PLAYLISTS" FontSize="64">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Expander.Header>

                    <local:SavedPlaylistsView/>

                </Expander>
            </Border>

            <Grid DockPanel.Dock="Right">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Background="{DynamicResource Color_Primary2}" CornerRadius="0,60,0,0"
                        
                        >
                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="Open Lists"
                               FontSize="32"
                                   Margin="3"
                               />
                        <Button Content="{DynamicResource DeleteIcon}" Command="{Binding }"/>
                    </StackPanel>
                </Border>

                <TabControl x:Name="PlaylistTabControl"                           
                            Grid.Row="1"
                            Style="{DynamicResource TabControlNoReorderStyle}"
                            Background="Transparent" BorderBrush="Transparent"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            ContentTemplate="{StaticResource PlaylistTabTemplate}" 
                            ItemsSource="{Binding OpenPlayListViewModels}"
                            ItemTemplate="{DynamicResource PlaylistTabHeaderRemplate}" 
                            SelectedItem="{Binding SelectedTab, UpdateSourceTrigger=PropertyChanged}">
                </TabControl>
            </Grid>
        </DockPanel>

    </Grid>

</UserControl>
