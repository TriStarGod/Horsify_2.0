//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Horsesoft.Horsify.ServicesModule.HorsifyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HorsifyService.IHorsifySongService")]
    public interface IHorsifySongService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFileService/Add", ReplyAction="http://tempuri.org/IHorsifyFileService/AddResponse")]
        int Add(Horsesoft.Music.Data.Model.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFileService/Add", ReplyAction="http://tempuri.org/IHorsifyFileService/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(Horsesoft.Music.Data.Model.File file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFileService/GetById", ReplyAction="http://tempuri.org/IHorsifyFileService/GetByIdResponse")]
        Horsesoft.Music.Data.Model.File GetById(long value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFileService/GetById", ReplyAction="http://tempuri.org/IHorsifyFileService/GetByIdResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.File> GetByIdAsync(long value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/SearchLike", ReplyAction="http://tempuri.org/IHorsifySearchService/SearchLikeResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable[] SearchLike(Horsesoft.Music.Data.Model.Horsify.SearchType searchTypes, string wildCardSearch, short randomAmount, short maxAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/SearchLike", ReplyAction="http://tempuri.org/IHorsifySearchService/SearchLikeResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> SearchLikeAsync(Horsesoft.Music.Data.Model.Horsify.SearchType searchTypes, string wildCardSearch, short randomAmount, short maxAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/SearchLikeFilters", ReplyAction="http://tempuri.org/IHorsifySearchService/SearchLikeFiltersResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable[] SearchLikeFilters(Horsesoft.Music.Data.Model.Horsify.SearchFilter searchFilter, short randomAmount, short maxAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/SearchLikeFilters", ReplyAction="http://tempuri.org/IHorsifySearchService/SearchLikeFiltersResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> SearchLikeFiltersAsync(Horsesoft.Music.Data.Model.Horsify.SearchFilter searchFilter, short randomAmount, short maxAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/GetMostPlayed", ReplyAction="http://tempuri.org/IHorsifySearchService/GetMostPlayedResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable[] GetMostPlayed();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/GetMostPlayed", ReplyAction="http://tempuri.org/IHorsifySearchService/GetMostPlayedResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> GetMostPlayedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/GetRecentlyAdded", ReplyAction="http://tempuri.org/IHorsifySearchService/GetRecentlyAddedResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable[] GetRecentlyAdded();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/GetRecentlyAdded", ReplyAction="http://tempuri.org/IHorsifySearchService/GetRecentlyAddedResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> GetRecentlyAddedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/GetRecentlyPlayed", ReplyAction="http://tempuri.org/IHorsifySearchService/GetRecentlyPlayedResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable[] GetRecentlyPlayed();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/GetRecentlyPlayed", ReplyAction="http://tempuri.org/IHorsifySearchService/GetRecentlyPlayedResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> GetRecentlyPlayedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/GetAllFromTableAsStrings", ReplyAction="http://tempuri.org/IHorsifySearchService/GetAllFromTableAsStringsResponse")]
        string[] GetAllFromTableAsStrings(Horsesoft.Music.Data.Model.Horsify.SearchType searchType, string search, short maxAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySearchService/GetAllFromTableAsStrings", ReplyAction="http://tempuri.org/IHorsifySearchService/GetAllFromTableAsStringsResponse")]
        System.Threading.Tasks.Task<string[]> GetAllFromTableAsStringsAsync(Horsesoft.Music.Data.Model.Horsify.SearchType searchType, string search, short maxAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyTagService/UpdatePlayedSong", ReplyAction="http://tempuri.org/IHorsifyTagService/UpdatePlayedSongResponse")]
        bool UpdatePlayedSong(long songId, System.Nullable<int> rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyTagService/UpdatePlayedSong", ReplyAction="http://tempuri.org/IHorsifyTagService/UpdatePlayedSongResponse")]
        System.Threading.Tasks.Task<bool> UpdatePlayedSongAsync(long songId, System.Nullable<int> rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFilterService/GetFilters", ReplyAction="http://tempuri.org/IHorsifyFilterService/GetFiltersResponse")]
        Horsesoft.Music.Data.Model.Filter[] GetFilters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFilterService/GetFilters", ReplyAction="http://tempuri.org/IHorsifyFilterService/GetFiltersResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.Filter[]> GetFiltersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFilterService/InsertFilter", ReplyAction="http://tempuri.org/IHorsifyFilterService/InsertFilterResponse")]
        void InsertFilter(Horsesoft.Music.Data.Model.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFilterService/InsertFilter", ReplyAction="http://tempuri.org/IHorsifyFilterService/InsertFilterResponse")]
        System.Threading.Tasks.Task InsertFilterAsync(Horsesoft.Music.Data.Model.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFilterService/RemoveFilter", ReplyAction="http://tempuri.org/IHorsifyFilterService/RemoveFilterResponse")]
        void RemoveFilter(Horsesoft.Music.Data.Model.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFilterService/RemoveFilter", ReplyAction="http://tempuri.org/IHorsifyFilterService/RemoveFilterResponse")]
        System.Threading.Tasks.Task RemoveFilterAsync(Horsesoft.Music.Data.Model.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFilterService/UpdateFilter", ReplyAction="http://tempuri.org/IHorsifyFilterService/UpdateFilterResponse")]
        void UpdateFilter(Horsesoft.Music.Data.Model.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyFilterService/UpdateFilter", ReplyAction="http://tempuri.org/IHorsifyFilterService/UpdateFilterResponse")]
        System.Threading.Tasks.Task UpdateFilterAsync(Horsesoft.Music.Data.Model.Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyPlaylistService/GetAllPlaylists", ReplyAction="http://tempuri.org/IHorsifyPlaylistService/GetAllPlaylistsResponse")]
        Horsesoft.Music.Data.Model.Playlist[] GetAllPlaylists();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyPlaylistService/GetAllPlaylists", ReplyAction="http://tempuri.org/IHorsifyPlaylistService/GetAllPlaylistsResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.Playlist[]> GetAllPlaylistsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyPlaylistService/GetSongsFromPlaylist", ReplyAction="http://tempuri.org/IHorsifyPlaylistService/GetSongsFromPlaylistResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable[] GetSongsFromPlaylist(Horsesoft.Music.Data.Model.Playlist playlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyPlaylistService/GetSongsFromPlaylist", ReplyAction="http://tempuri.org/IHorsifyPlaylistService/GetSongsFromPlaylistResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> GetSongsFromPlaylistAsync(Horsesoft.Music.Data.Model.Playlist playlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyPlaylistService/InsertOrUpdatePlaylists", ReplyAction="http://tempuri.org/IHorsifyPlaylistService/InsertOrUpdatePlaylistsResponse")]
        void InsertOrUpdatePlaylists(Horsesoft.Music.Data.Model.Playlist[] playlists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifyPlaylistService/InsertOrUpdatePlaylists", ReplyAction="http://tempuri.org/IHorsifyPlaylistService/InsertOrUpdatePlaylistsResponse")]
        System.Threading.Tasks.Task InsertOrUpdatePlaylistsAsync(Horsesoft.Music.Data.Model.Playlist[] playlists);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetSongById", ReplyAction="http://tempuri.org/IHorsifySongService/GetSongByIdResponse")]
        Horsesoft.Music.Data.Model.AllJoinedTable GetSongById(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetSongById", ReplyAction="http://tempuri.org/IHorsifySongService/GetSongByIdResponse")]
        System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable> GetSongByIdAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetTotals", ReplyAction="http://tempuri.org/IHorsifySongService/GetTotalsResponse")]
        int GetTotals(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorsifySongService/GetTotals", ReplyAction="http://tempuri.org/IHorsifySongService/GetTotalsResponse")]
        System.Threading.Tasks.Task<int> GetTotalsAsync(string type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHorsifySongServiceChannel : Horsesoft.Horsify.ServicesModule.HorsifyService.IHorsifySongService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HorsifySongServiceClient : System.ServiceModel.ClientBase<Horsesoft.Horsify.ServicesModule.HorsifyService.IHorsifySongService>, Horsesoft.Horsify.ServicesModule.HorsifyService.IHorsifySongService {
        
        public HorsifySongServiceClient() {
        }
        
        public HorsifySongServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HorsifySongServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HorsifySongServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HorsifySongServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(Horsesoft.Music.Data.Model.File file) {
            return base.Channel.Add(file);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(Horsesoft.Music.Data.Model.File file) {
            return base.Channel.AddAsync(file);
        }
        
        public Horsesoft.Music.Data.Model.File GetById(long value) {
            return base.Channel.GetById(value);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.File> GetByIdAsync(long value) {
            return base.Channel.GetByIdAsync(value);
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable[] SearchLike(Horsesoft.Music.Data.Model.Horsify.SearchType searchTypes, string wildCardSearch, short randomAmount, short maxAmount) {
            return base.Channel.SearchLike(searchTypes, wildCardSearch, randomAmount, maxAmount);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> SearchLikeAsync(Horsesoft.Music.Data.Model.Horsify.SearchType searchTypes, string wildCardSearch, short randomAmount, short maxAmount) {
            return base.Channel.SearchLikeAsync(searchTypes, wildCardSearch, randomAmount, maxAmount);
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable[] SearchLikeFilters(Horsesoft.Music.Data.Model.Horsify.SearchFilter searchFilter, short randomAmount, short maxAmount) {
            return base.Channel.SearchLikeFilters(searchFilter, randomAmount, maxAmount);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> SearchLikeFiltersAsync(Horsesoft.Music.Data.Model.Horsify.SearchFilter searchFilter, short randomAmount, short maxAmount) {
            return base.Channel.SearchLikeFiltersAsync(searchFilter, randomAmount, maxAmount);
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable[] GetMostPlayed() {
            return base.Channel.GetMostPlayed();
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> GetMostPlayedAsync() {
            return base.Channel.GetMostPlayedAsync();
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable[] GetRecentlyAdded() {
            return base.Channel.GetRecentlyAdded();
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> GetRecentlyAddedAsync() {
            return base.Channel.GetRecentlyAddedAsync();
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable[] GetRecentlyPlayed() {
            return base.Channel.GetRecentlyPlayed();
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> GetRecentlyPlayedAsync() {
            return base.Channel.GetRecentlyPlayedAsync();
        }
        
        public string[] GetAllFromTableAsStrings(Horsesoft.Music.Data.Model.Horsify.SearchType searchType, string search, short maxAmount) {
            return base.Channel.GetAllFromTableAsStrings(searchType, search, maxAmount);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllFromTableAsStringsAsync(Horsesoft.Music.Data.Model.Horsify.SearchType searchType, string search, short maxAmount) {
            return base.Channel.GetAllFromTableAsStringsAsync(searchType, search, maxAmount);
        }
        
        public bool UpdatePlayedSong(long songId, System.Nullable<int> rating) {
            return base.Channel.UpdatePlayedSong(songId, rating);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePlayedSongAsync(long songId, System.Nullable<int> rating) {
            return base.Channel.UpdatePlayedSongAsync(songId, rating);
        }
        
        public Horsesoft.Music.Data.Model.Filter[] GetFilters() {
            return base.Channel.GetFilters();
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.Filter[]> GetFiltersAsync() {
            return base.Channel.GetFiltersAsync();
        }
        
        public void InsertFilter(Horsesoft.Music.Data.Model.Filter filter) {
            base.Channel.InsertFilter(filter);
        }
        
        public System.Threading.Tasks.Task InsertFilterAsync(Horsesoft.Music.Data.Model.Filter filter) {
            return base.Channel.InsertFilterAsync(filter);
        }
        
        public void RemoveFilter(Horsesoft.Music.Data.Model.Filter filter) {
            base.Channel.RemoveFilter(filter);
        }
        
        public System.Threading.Tasks.Task RemoveFilterAsync(Horsesoft.Music.Data.Model.Filter filter) {
            return base.Channel.RemoveFilterAsync(filter);
        }
        
        public void UpdateFilter(Horsesoft.Music.Data.Model.Filter filter) {
            base.Channel.UpdateFilter(filter);
        }
        
        public System.Threading.Tasks.Task UpdateFilterAsync(Horsesoft.Music.Data.Model.Filter filter) {
            return base.Channel.UpdateFilterAsync(filter);
        }
        
        public Horsesoft.Music.Data.Model.Playlist[] GetAllPlaylists() {
            return base.Channel.GetAllPlaylists();
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.Playlist[]> GetAllPlaylistsAsync() {
            return base.Channel.GetAllPlaylistsAsync();
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable[] GetSongsFromPlaylist(Horsesoft.Music.Data.Model.Playlist playlist) {
            return base.Channel.GetSongsFromPlaylist(playlist);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable[]> GetSongsFromPlaylistAsync(Horsesoft.Music.Data.Model.Playlist playlist) {
            return base.Channel.GetSongsFromPlaylistAsync(playlist);
        }
        
        public void InsertOrUpdatePlaylists(Horsesoft.Music.Data.Model.Playlist[] playlists) {
            base.Channel.InsertOrUpdatePlaylists(playlists);
        }
        
        public System.Threading.Tasks.Task InsertOrUpdatePlaylistsAsync(Horsesoft.Music.Data.Model.Playlist[] playlists) {
            return base.Channel.InsertOrUpdatePlaylistsAsync(playlists);
        }
        
        public Horsesoft.Music.Data.Model.AllJoinedTable GetSongById(int value) {
            return base.Channel.GetSongById(value);
        }
        
        public System.Threading.Tasks.Task<Horsesoft.Music.Data.Model.AllJoinedTable> GetSongByIdAsync(int value) {
            return base.Channel.GetSongByIdAsync(value);
        }
        
        public int GetTotals(string type) {
            return base.Channel.GetTotals(type);
        }
        
        public System.Threading.Tasks.Task<int> GetTotalsAsync(string type) {
            return base.Channel.GetTotalsAsync(type);
        }
    }
}
